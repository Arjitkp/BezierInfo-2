/**********************************************************************
 *
 *  This script takes the article as generated by webpack, and uses the
 *  ReactDOMServer library to serialize it to pure HTML markup. This is
 *  then injected into the index.html template, with code injected to
 *  load the
 *
 **********************************************************************/

var fs = require("fs-extra");
var path = require("path");
const BASEDIR = path.join(__dirname, "..");

var React = require("react");
var Server = require("react-dom/server");

var FullArticle = require(path.join(BASEDIR, "./article")).FullArticle;
var article = React.createElement(FullArticle, {});
var staticMarkup = Server.renderToStaticMarkup(article);

// make sure to remove the `<base>` tag from the index, and slot in some full-html-only code.
var html = fs.readFileSync(path.join(BASEDIR, "index.template.html")).toString();
html = html.replace('    <base href="..">\n', '');
html = "<!-- AUTOGENERATED CONTENT, PLEASE SEE tools/lib/render-to-full-index.js -->\n" + html;

// surgery:
var parts = html.split('<article>');
var leadin = parts[0];
var scripts = [
  `<script src="lib/vendor/paperjs/paper-full.min.js"></script>`,
  `<script src="lib/vendor/bezier.js"></script>`,
  `<script src="lib/vendor/chroma.min.js"></script>`,
  `<script src="lib/site/gfx-api.js"></script>`,
  `<script src="lib/site/handlers.bundle.js"></script>`,
  `<script src="lib/site/canvas.js"></script>`,
  `<script src="lib/site/social-updater.js"></script>`,
  `<script src="lib/site/disqus.js"></script>`
].join("\n");
var reassembled = `${leadin}<article>${staticMarkup}</article>${scripts}</body>\n</html>\n`;

fs.writeFileSync(path.join(BASEDIR, "index.full.html"), reassembled);
